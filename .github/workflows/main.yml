name: Build and Deploy Angular App to IIS Server

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: windows-latest  # Use 'windows-latest' for a Windows environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Angular CLI globally
        run: npm install -g @angular/cli

      - name: Install dependencies
        run: npm install

      - name: Build Angular project
        run: ng build --configuration production

      - name: Upload build artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: angular-build
          path: dist/timedashboard  # Adjust path if your build output folder is different

  deploy:
    runs-on: self-hosted  # Use a self-hosted runner for deployment
    needs: build
    steps:
      - name: Download build artifacts from GitHub
        uses: actions/download-artifact@v3
        with:
          name: angular-build

      - name: Copy build files to IIS directory
        shell: powershell
        run: |
          # Define paths
          $sourcePath = "${{ github.workspace }}\browser"
          $destinationPath = "C:\Kesava\Web\Timer"

          # Create the destination directory if it doesn't exist
          if (-Not (Test-Path $destinationPath)) {
              Write-Host "Creating directory at $destinationPath"
              New-Item -ItemType Directory -Path $destinationPath -Force
          }

          # Copy the files to the destination
          Write-Host "Copying files from $sourcePath to $destinationPath"
          Copy-Item -Path "$sourcePath\*" -Destination $destinationPath -Recurse -Force

      - name: Deploy to IIS
        shell: powershell
        run: |
          Import-Module WebAdministration
          $siteName = 'TimeApp'
          $physicalPath = 'C:\Kesava\Web\Timer'
          $port = 80
          $hostHeader = 'currenttime.com'

          # Check if the site exists
          if (!(Get-Website | Where-Object { $_.Name -eq $siteName })) {
            Write-Host "Creating new IIS site: $siteName"
            New-Website -Name $siteName -PhysicalPath $physicalPath -Port $port -HostHeader $hostHeader -ApplicationPool 'DefaultAppPool'
          } else {
            Write-Host "IIS site $siteName already exists. Updating physical path."
            Set-ItemProperty "IIS:\Sites\$siteName" -Name physicalPath -Value $physicalPath

            # Update bindings if necessary
            $bindings = Get-WebBinding -Name $siteName
            if (!($bindings | Where-Object { $_.bindingInformation -eq "*:$port:$hostHeader" })) {
              Write-Host "Updating binding for $siteName"
              Remove-WebBinding -Name $siteName -BindingInformation "*:$port:*" -Protocol http -ErrorAction SilentlyContinue
              New-WebBinding -Name $siteName -Protocol http -IPAddress * -HostHeader $hostHeader -Port $port
            }
          }

          # Ensure the site is running
          Start-Website -Name $siteName

          Write-Host "Deployment complete. Site $siteName is running."
