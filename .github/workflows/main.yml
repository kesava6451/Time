name: Build and Deploy Node.js Application

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest  # Run the build on a Linux-based runner

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify the Node.js version

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Build the application
      - name: Build the application
        run: |
          npm run build

      # (Optional) Optionally upload the build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist  # Assuming 'dist' is the folder containing your build output

  deploy:
    runs-on: ubuntu-latest  # Deployment job also runs on Ubuntu (You can use a Windows runner too)

    needs: build  # This ensures deployment only runs after the build job completes

    steps:
      # Checkout the code again for deployment
      - name: Checkout code
        uses: actions/checkout@v2

      # Download build artifacts (from the previous build step)
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      # Deploy to IIS (Windows Server)
      - name: Deploy to IIS (Windows Server)
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.IIS_SERVER_IP }}  # Set your server's IP address in GitHub Secrets
          username: ${{ secrets.IIS_SERVER_USER }}  # Set your server's username in GitHub Secrets
          password: ${{ secrets.IIS_SERVER_PASSWORD }}  # Set your server's password in GitHub Secrets
          script: |
            cd C:/path/to/your/app  # Specify your application directory on the server
            git pull origin master  # Pull the latest changes from your repository
            npm install  # Install dependencies on the server
            npm run build  # Build the app on the server (optional)
            iisreset /stop  # Stop IIS before copying files
            # Copy the build files to the IIS web directory (make sure IIS is pointing to this folder)
            copy /Y dist/* C:/inetpub/wwwroot/your-app  # Adjust the destination path accordingly
            iisreset /start  # Restart IIS to serve the new build
